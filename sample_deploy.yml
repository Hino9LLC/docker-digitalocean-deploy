name: Build and Deploy to DigitalOcean

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DO_ACCESS_TOKEN }}
          password: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            registry.digitalocean.com/${{ secrets.DO_REGISTRY }}/${{ secrets.CONTAINER_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  deploy-to-droplet:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            rm -rf docker-digitalocean-deploy
            git clone https://github.com/Hino9LLC/docker-digitalocean-deploy.git
            cd docker-digitalocean-deploy
            chmod +x entrypoint.sh

            # Environment variables for entrypoint.sh
            export DO_REGISTRY="${{ secrets.DO_REGISTRY }}"
            export DO_ACCESS_TOKEN="${{ secrets.DO_ACCESS_TOKEN }}"
            export CONTAINER_NAME="${{ secrets.CONTAINER_NAME }}"
            export HEALTH_CHECK_CMD="curl -f http://localhost:8000/health || exit 1"

            # Environment variables for the container
            export DATABASE_URL="${{ secrets.DATABASE_URL }}"
            export LOG_LEVEL="info"
            export CONTAINER_ENV_VARS="DATABASE_URL,LOG_LEVEL"

            ./entrypoint.sh
